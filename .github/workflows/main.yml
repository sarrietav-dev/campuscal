name: CI/CD
on: [ push ]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
  tests:
    runs-on: ubuntu-latest
    name: Testing

    steps:
      - uses: actions/checkout@v2
      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: intl, pdo, sqlite, zip, json, dom, curl, libxml, mbstring
          coverage: xdebug
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Install npm dependencies
        run: npm install
      - name: Build assets
        run: npm run build

      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        # Set environment
        env:
          SESSION_DRIVER: array
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"

        run: php artisan migrate

      - name: Show dir
        run: pwd
      - name: PHP Version
        run: php --version

      # Code quality

      - name: Execute tests (Unit and Feature tests) via PestPHP
        # Set environment
        env:
          SESSION_DRIVER: array
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"

        run: php artisan test -p
  docker-login:
    runs-on: ubuntu-latest
    name: Docker Login
    needs: [ tests ]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  deploy:
    name: Deploy app
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ tests, docker-login ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy
